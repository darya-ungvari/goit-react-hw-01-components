{"version":3,"sources":["Components/Profile/profile.module.css","Components/TransactionHistory/transactions.module.css","Components/Statistics/statistics.module.css","Components/FriendList/friendList.module.css","Components/Profile/Profile.jsx","Components/Statistics/Statistics.jsx","Components/FriendList/FriendItem.jsx","Components/FriendList/FriendList.js","Components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","stat","class","item","style","backgroundColor","randomColor","luminosity","hue","percentage","id","FriendItem","isOnline","key","online","offline","width","FriendList","friends","friend","TransactionHistory","transactions","transactionHistory","titles","invoiceTd","transaction","td","amount","currency","App","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2669109a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"profile_label__2-GXO\",\"name\":\"profile_name__2fEa1\",\"description\":\"profile_description__3WT8O\",\"profile\":\"profile_profile__3vKki\",\"tag\":\"profile_tag__VyjGp\",\"location\":\"profile_location__1S_kN\",\"avatar\":\"profile_avatar__2t2m-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transactions_transactionHistory__2G7db\",\"td\":\"transactions_td__3phDI\",\"tr\":\"transactions_tr__2ZhRV\",\"titles\":\"transactions_titles__Rw0fG\",\"invoiceTd\":\"transactions_invoiceTd__2diMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"statistics_label__383ih\",\"item\":\"statistics_item__3o3o6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"online\":\"friendList_online__iW1E3\",\"offline\":\"friendList_offline__D-9vF\"};","import s from \"./profile.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={s.profile}>\n    <div className={s.description}>\n      <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n      <p className={s.name}>{name}</p>\n      <p className={s.tag}>{tag}</p>\n      <p className={s.location}>{location}</p>\n    </div>\n\n    <ul className={s.stats}>\n      <li>\n        <span className={s.label}>Followers</span>\n        <span className={s.quantity}>{stats.followers}</span>\n      </li>\n      <li>\n        <span className={s.label}>Views</span>\n        <span className={s.quantity}>{stats.views}</span>\n      </li>\n      <li>\n        <span className={s.label}>Likes</span>\n        <span className={s.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    views: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired\n  }),\n}\n\nexport default Profile;\n","import s from \"./statistics.module.css\";\nimport randomColor from 'randomcolor';\nimport PropTypes from 'prop-types'\n\nconst Statistics = ({ stats, title }) => (\n  <section className={s.statistics}>\n     {title && <h2 className={s.title}>Upload stats</h2>}\n    <ul className={s.statList}>\n      {stats.map(stat => (\n        <li class={s.item}\n        style={{backgroundColor: randomColor({\n          luminosity: 'light',\n          hue: 'blue'\n       })}}\n          key={stats.id}>\n          <span className={s.label}>{stat.label}</span>\n          <span className={s.percentage}>{stat.percentage}</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n)\n}\n\nexport default Statistics;\n","import s from \"./friendList.module.css\";\r\nimport PropTypes from 'prop-types';\r\nconst FriendItem = ({ avatar, name, isOnline, key }) => (\r\n    <li\r\n        className={s.item}\r\n        key={key}>\r\n        <span className={isOnline ? s.online : s.offline}>{isOnline}</span>\r\n        <img className={s.avatar} src={avatar} alt=\"avatar\" width=\"48\" />\r\n        <p className={s.name}>{name}</p>\r\n    </li>\r\n)\r\n\r\nFriendItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n  };\r\n\r\nexport default FriendItem;","import PropTypes from 'prop-types'; \r\nimport FriendItem from './FriendItem';\r\n\r\n\r\nconst FriendList = ({ friends }) => (\r\n    <ul>\r\n        {friends.map(friend => (\r\n            <FriendItem \r\n                key={friend.id}\r\n                isOnline={friend.isOnline}\r\n                avatar={friend.avatar}\r\n                name={friend.name}></FriendItem>\r\n    ))}\r\n\r\n    </ul>\r\n)\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.number.isRequired,\r\n        }),\r\n      ),\r\n}\r\n\r\n\r\nexport default FriendList;","import s from \"./transactions.module.css\";\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n    <table className={s.transactionHistory}>\r\n        <thead>\r\n            <tr>\r\n            <th className={s.titles}>Type</th>\r\n            <th className={s.titles}>Amount</th>\r\n            <th className={s.titles}>Currency</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr>\r\n        <td className={s.invoiceTd}>Invoice</td>\r\n        <td className={s.invoiceTd}>125</td>\r\n        <td className={s.invoiceTd}>USD</td>\r\n        </tr>\r\n            {transactions.map(transaction => (\r\n                <tr>\r\n                <td className={s.td}>Withdrawal</td>\r\n                <td className={s.td}>{transaction.amount}</td>\r\n                <td className={s.td}>{transaction.currency}</td>\r\n                </tr>\r\n            ))}\r\n\r\n    </tbody>\r\n    </table>\r\n)\r\n\r\nexport default TransactionHistory;","import './App.css';\nimport Profile from './Components/Profile/Profile';\nimport Statistics from './Components/Statistics/Statistics'\nimport user from './Components/Profile/user.json';\nimport stats from './Components/Statistics/statistical-data.json';\nimport FriendList from './Components/FriendList/FriendList';\nimport friends from './Components/FriendList/friends.json';\nimport TransactionHistory from './Components/TransactionHistory/TransactionHistory';\nimport transactions from './Components/TransactionHistory/transactions.json';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile \n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}>\n      </Profile>\n      <Statistics \n        title=\"Upload stats\" stats={stats}>\n      </Statistics>\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions}/>\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}